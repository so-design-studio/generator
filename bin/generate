#!/bin/bash

set -e

export OPS_NAMESPACE="so"
export DEVELOP_BRANCH="develop"
export GITHUB_PROJECT_DESCRIPTION="New project. TODO: add description and tags"

export TEMPLATE_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )/../template"
export REPLACER="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )/lib/replacer.py"

function log {
  echo
  echo "--- generate: $@"
  echo
}

function usage {
  echo "usage: $0 [--github] <name>"
  exit 1
}


[ $# -lt 1 ] && usage
[ $# -eq 1 ] && [ "$1" == '--github' ] && usage
[ $# -gt 1 ] && [ "$1" != '--github' ] && usage

if [ $# -eq 1 ]; then
  export PROJECT_NAME="$1"
else
  export PROJECT_NAME="$2"
fi
export PROJECT_DIR="$(pwd)/$PROJECT_NAME"
export REPO_URL="git@github.com:$SO_OPS_GITHUB_USER_OR_ORG/$PROJECT_NAME.git"

if [ -d "$PROJECT_DIR" ]; then
  echo "error: directory exists: $PROJECT_DIR"
  exit 2
fi


if [ "$1" == '--github' ]; then
  GITHUB=1
fi


log "prepare"
if ! mkdir "$PROJECT_DIR" ; then
  echo "error: couldn't create $PROJECT_DIR"
  exit 3
fi
cd "$PROJECT_DIR"
git init


if [ ! -z "$GITHUB" ]; then
  log "github: create repo"
  if [ -z "$SO_OPS_GITHUB_ORG" ]; then
    POST_TO="$SO_OPS_GITHUB_USER"
  else
    POST_TO="orgs/$SO_OPS_GITHUB_ORG"
  fi
  curl -u "$SO_OPS_GITHUB_USER:$SO_OPS_GITHUB_API_TOKEN" \
  "https://api.github.com/$POST_TO/repos" \
  --data "{
    \"name\": \"$PROJECT_NAME\",
    \"description\": \"$GITHUB_PROJECT_DESCRIPTION\",
    \"homepage\": \"http://$OPS_NAMESPACE-$PROJECT_NAME.dev\",
    \"private\": true
  }"
fi

log "add readme on master"
echo "# $PROJECT_NAME
See \`$DEVELOP_BRANCH\` branch." > README.md
git add .
git commit -m "initial"

log "add git remote"
git remote add origin "$REPO_URL"

if [ ! -z "$GITHUB" ]; then
  log "github: push master"
  if ! git push --set-upstream origin master ; then
    echo "error: couldn't push to github"
    exit 4
  fi
fi

log "branch to $DEVELOP_BRANCH"
git branch "$DEVELOP_BRANCH"
git checkout "$DEVELOP_BRANCH"
rm README.md

log "duplicate project template"
if ! cp -rf "$TEMPLATE_DIR/" "$PROJECT_DIR" ; then
  echo "error: couldn't duplicate project template"
  exit 5
fi

log "template substitutions"
if ! "$REPLACER" ; then
  echo "error: template substitutions failed"
  exit 6
fi

log "run prep script"
bin/prep

log "commit template files"
git add .
git commit -m "generate"

if [ ! -z "$GITHUB" ]; then
  log "github: push $DEVELOP_BRANCH"
  git push --set-upstream origin "$DEVELOP_BRANCH"
fi

# which gittower > /dev/null && gittower .
# which atom > /dev/null && atom .

echo
